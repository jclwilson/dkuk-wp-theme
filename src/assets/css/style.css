/*!
Theme Name: DKUK
Theme URI: https://github.com/jclwilson/dkuk-wp-theme
Author: Jacob Charles Wilson
Author URI: https://jacobcharleswilson.com
Description: WordPress theme developed by Jacob Charles Wilson (@jclwilson) for DKUK Salon, London.
Version: 1.0
Text Domain: dkuk
*/

/* Typography defaults */
@font-face {
	font-family: WorkSans;
	src: url(http://127.0.0.1:8000/wp-content/themes/dkuk-wp-theme/assets/fonts/WorkSans-Regular.ttf);
}
@font-face {
	font-family: WorkSansBold;
	src: url(http://127.0.0.1:8000/wp-content/themes/dkuk-wp-theme/assets/fonts/WorkSans-Bold.ttf);
}

/* Start by setting basic rules for elements */
/* Many of these are setting cosntant values or basic defaults that need to be inherited */
/* These could be set in the reset CSS, but I want to keep that vanilla and entirely within the critical css section of the header */
html {
	/* Sets root font size for rem unit */
	font-size: 16px;

	/* Typography */
	font-family: 'WorkSans', sans-serif;
	
	/* ensures border-box sizing, useful for masonry and flexboxgrid */
	box-sizing: border-box;

	/* Break long words */
	/* Taken from CSS Tricks Snippets */
	/* https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/ */
	/* These are technically the same, but use both */
	overflow-wrap: break-word;
	word-wrap: break-word;

	-ms-word-break: break-all;
	/* This is the dangerous one in WebKit, as it breaks things wherever */
	word-break: break-all;
	/* Instead use this non-standard one: */
	word-break: break-word;

	/* Adds a hyphen where the word breaks, if supported (No Blink) */
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
}

/* Ensures border-box sizing */
*, *:before, *:after {
	box-sizing: inherit;
}

body {
	/* Sets font size for body separately to the root font size - very important to note! */
	font-size:1.5em;
}

/* Ensure all images don't exceed boundaries*/
img {
	height:auto;
	max-width:100%;
}

/* 3 columns by default */
.grid__sizer,
.grid__item {
	width: 30%;
}

.grid__gutter-sizer {
	width:5%;
}

/* The styles below control the background stripes and the vertical alignment of elements to those stripes. */
/* These have been carefully calculated and matched */
/* See the below Smashing Magazine article for some ideas of what's happening */
/* https://www.smashingmagazine.com/2017/05/fluid-responsive-typography-css-poly-fluid-sizing/ */
/* The magic numbers here could be replaced by CSS Variables */

:root {
	--dkuk-half-bg-line: 0.2rem;
	--dkuk-line-height: 2.7rem;
}

/* Elements to be positioned */
.align {
	font-family:sans-serif;
	font-weight:bold;
	position:relative;
	text-transform:uppercase;
	font-size:3.7rem /* magic number to fit individual font to lines */;
	line-height:2.9rem /* matches last value of stripes (type height plus half the height of the black line) */;
	vertical-align:middle;
	margin:0 auto;
	padding:0 auto;
}

/* The Logo */
.header__logo {
	height: calc(var(--dkuk-line-height) + var(--dkuk-half-bg-line));
}

/* The Stripes */
.stripes {
    background-image: repeating-linear-gradient(
		180deg,
		#000,
		#000 var(--dkuk-half-bg-line), /*half the height of the black line, same as the difference in letter to element height*/
		#fff var(--dkuk-half-bg-line),
		#fff var(--dkuk-line-height),
		#000 var(--dkuk-line-height),  /* previous 2 values match type height*/
		#000 calc(var(--dkuk-line-height) + var(--dkuk-half-bg-line)) /*add type height plys first value*/
	);
}

.header {margin-bottom: var(--dkuk-line-height);}

.post {border: solid black calc(var(--dkuk-half-bg-line) * 2); padding:calc(var(--dkuk-line-height) / 2); background-color: white; margin-bottom:var(--dkuk-line-height);}

.post.grid__item {display:flex; flex-direction: column;}
.post.grid__item .thumbnail__link {order:-1; margin-bottom:1rem;}
.post.grid__item .post__header {margin-bottom: 1rem;}

/* Break long words */
/* Taken from CSS Tricks Snippets */
/* https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/ */
.post {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

/* Media Queries */
/* My tendency is to construct media queries on content not on design. */
/* Have three different sizes given three columns */

@media (max-width: 64em) {
	/* One column on narrow screens */
	.grid__sizer,
	.grid__item {
		width: 49%;
	}
	.grid__gutter-sizer {
		width:2%;
	}
}

@media (max-width: 48em) {
	/* One column on narrow screens */
	.grid__sizer,
	.grid__item {
		width: 100%;
	}
	.grid__gutter-sizer {
		width:0%;
	}
}
